""" Crate Annotation for winapi """

load("@rules_rust//crate_universe:defs.bzl", "crate")

ANNOTATION = crate.annotation(
    deps = [
        "@//bazel/platforms/windows:advapi32",
        "@//bazel/platforms/windows:cfgmgr32",
        "@//bazel/platforms/windows:credui",
        "@//bazel/platforms/windows:d2d1",
        "@//bazel/platforms/windows:d3d11",
        "@//bazel/platforms/windows:d3d12",
        "@//bazel/platforms/windows:d3dcompiler",
        "@//bazel/platforms/windows:dcomp",
        "@//bazel/platforms/windows:dwrite",
        "@//bazel/platforms/windows:dxgi",
        "@//bazel/platforms/windows:gdi32",
        "@//bazel/platforms/windows:iphlpapi",
        "@//bazel/platforms/windows:kernel32",
        "@//bazel/platforms/windows:msimg32",
        "@//bazel/platforms/windows:netapi32",
        "@//bazel/platforms/windows:ntdll",
        "@//bazel/platforms/windows:ole32",
        "@//bazel/platforms/windows:oleaut32",
        "@//bazel/platforms/windows:opengl32",
        "@//bazel/platforms/windows:pdh",
        "@//bazel/platforms/windows:powrprof",
        "@//bazel/platforms/windows:psapi",
        "@//bazel/platforms/windows:secur32",
        "@//bazel/platforms/windows:shell32",
        "@//bazel/platforms/windows:shlwapi",
        "@//bazel/platforms/windows:synchronization",
        "@//bazel/platforms/windows:user32",
        "@//bazel/platforms/windows:windowscodecs",
        "@//bazel/platforms/windows:winspool",
        "@//bazel/platforms/windows:ws2_32",
    ],
    crate_features = [
        "basetsd",
        "cfg",
        "cfgmgr32",
        "corecrt",
        "d2d1_1",
        "d2d1",
        "d2d1effectauthor",
        "d2d1effects",
        "d2dbasetypes",
        "d3d11shader",
        "d3d9types",
        "d3dcommon",
        "dcommon",
        "dcompanimation",
        "dcomptypes",
        "devpropdef",
        "documenttarget",
        "dwrite",
        "dxgi",
        "dxgiformat",
        "dxgitype",
        "evntcons",
        "evntprov",
        "evntrace",
        "excpt",
        "guiddef",
        "ifdef",
        "ifmib",
        "in6addr",
        "inaddr",
        "ipexport",
        "ipifcons",
        "ipmib",
        "iprtrmib",
        "iptypes",
        "ktmtypes",
        "libloaderapi",
        "limits",
        "lsalookup",
        "mstcpip",
        "nldef",
        "ntddndis",
        "ntdef",
        "ntstatus",
        "oaidl",
        "objidlbase",
        "ocidl",
        "processthreadsapi",
        "propidl",
        "qos",
        "reason",
        "rpc",
        "rpcndr",
        "shtypes",
        "sspi",
        "subauth",
        "tcpestats",
        "tcpmib",
        "timezoneapi",
        "udpmib",
        "unknwnbase",
        "vadefs",
        "vcruntime",
        "wincodec",
        "wincon",
        "wincontypes",
        "wincred",
        "windef",
        "wingdi",
        "winnt",
        "winreg",
        "winsock2",
        "wmistr",
        "ws2def",
        "ws2ipdef",
        "wtypes",
        "wtypesbase",
    ],
)
